steps:
name: "Comandos Windows"
steps:
  - command: "hostname"
    label: "Nombre de mi computador"
  - command: "ipconfig"
    label: "Direcciones de red"
# si falla cualquier paso anterior, igual sigue
    allow_dependency_failure: true
  # esperemos a que acabe de ejecutar ipconfig
  - wait
  - command: "python ./hello.py"
    label: "Executando hello.py"
  # Una intervencion manual
  # los metadatos quedan dentro del servidor, para que pueda
  # ser utilizado mas adelante
  - block: "¿Executamos bye.py?"
    fields:
      - text: "Version"
        key: "release-version"
      - select: "Rama"
        key: "release-rama"
        default: "dev"
        options:
          - label: "Desarrollo"
            value: "dev"
          - label: "Estable"
            value: "Stable"
  - command: "python ./bye.py"
    label: "Executando bye.py"
    #si bye.py no se ejecuta, intenta 3 veces automaticamente
    retry:
      automatic:
        limit: 3
  - wait
  - input: "¿Quien eres?"
    key: "info"
    fields:
      - text: "¿Cual es tu nombre?"
        key: "name"
      - select: "¿Eres de?"
        key: "pais"
        default: "pe"
        options:
          - label: "Europa"
            value: "eu"
          - label: "Peru"
            value: "pe"
  # retorna todas la metadata creada
  - command: "buildkite-agent meta-data keys"
  #el comando anterior depende de si info funciona
    depends_on: "info"
  - command: "buildkite-agent meta-data get name"
  #el comando anterior depende de si info funciona
    depends_on: "info"

  - command: "python ./build.py"
    label: "Compilando"
    artifact_paths:
      - "build/*"
  - wait
  - command: "python ./deploy.py"
    label: "Desplegando"
  # solo se si es master
    branches: "master"
    # ¿te demoraras como maximo 10 minutos?, si no, se cancela
    timeout_in_minutes: 10
